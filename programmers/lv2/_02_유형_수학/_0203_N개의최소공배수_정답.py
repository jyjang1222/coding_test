# https://school.programmers.co.kr/learn/courses/30/lessons/12953


def checkEquals(arr):
    val = arr[0]
    for i in arr:
        if val != i:
            return False
    return True

def solution(arr):
    temp = []
    for v in arr:
        temp.append(v)
    
    while True:
        if checkEquals(arr):
            return arr[0]


        mx = max(arr)
        
        i = 0
        while True:
            if arr[i] >= mx:
                i += 1
            else:
                arr[i] += temp[i]
            if i == len(arr):
                break


    return 0
arr =[2,6,8,14]
r = solution(arr)
print(r)

"""
[2,6,8,14] 각 자리에 자기 배수를 계속 더하다보면 전부 같은수가 나오고
그수가 최소공배수인것이다.
2 는 2 + 2 + 2 + 2 + 2... 를 반복해서 168이되고,
6 은 6 + 6 + 6 + 6 + 6... 를 반복해서 168이되고,
8 은 8 + 8 + 8 + 8 + 8... 를 반복해서 168이되고,
14 은 14 + 14 + 14 + 14 + 14... 를 반복해서 168이되는것이다.
구하는 식은 아래와 같다. 
-----------------------------------------------------------------
[1]  먼저 가장 큰수를 구한다. 
        max = 14 가된다. 
[2] max 보다 커지거나 같아 질때까지 각각의 수의 배수를 더한다. 
         2 는 => 2씩 더하게된다.  4, 6, 8, 12, 14 에서 멈출것이고, 
         6 은 => 6씩 더하게된다.  12, 18 에서 멈출것이고, 
         8 은 => 8씩 더하게된다.  16 에서 멈출것이고, 
        14 는 => 14씩 더하게된다. 14에서 멈출것이다. 
        [ 14, 18 , 16, 14 ]
[3] 각가의 수가 전부 같은지 검사해서 같으면 종료. 아니면 반복
       [ 14, 18 , 16, 14 ] 이와 같이 나왔음로 1~3 을 반복한다. 

다시 반복하면 
max 는 24가 될것이고 

14 =>  2씩 더하게된다.  16 , 18 , 20 , 22 , 24 에서 멈춘다.
18 =>  6씩 더하게된다.  24에서 멈춘다.
16 =>  8씩 더하게된다.  24에서 멈춘다.
14 => 14씩 더하게된다.  28에서 멈춘다. 
[24, 24, 24, 28] 이므로 서로 같지 않다. 

결국 4개의 수는 전부 같지 않으므로 다시 max를 구한다.
max = 28 이될껏이고 
24 =>   2씩 더하게된다. 26 , 28 이되고,
24 =>   6씩 더하게된다. 30 이되고,
24 =>   8씩 더하게된다. 32 가되고
28 =>   14씩 더하게된다. 28이된다. 
[28, 30, 32, 28] 이므로 서로 같지 않다. 

이와 같이 계속 반복하면 
결국 [168,168,168,168] 에서 멈추게 되고 전부 같은수이므로 최소 공배수는 168 이된다. 

"""